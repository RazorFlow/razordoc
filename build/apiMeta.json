{"classes":[{"desc":"Chart Component is used to create a chart component","class":"ChartComponent","augments":"Component","signature":"new ChartComponent()","access":"public","methods":[{"desc":"Adds a series to the chart. The number of data points provided using the seriesData array should be the same as the other series and the number of labels.","method":"addSeries","param":[{"paramType":"String","name":"id","desc":"Unique id of the series","optional":false},{"paramType":"String","name":"name","desc":"The name of the series","optional":false},{"paramType":"Array","name":"seriesData","desc":"The series data","optional":false},{"paramType":"ChartSeriesProperties","name":"opts","desc":"A bunch of options passed to as an object","optional":false}],"example":"var c1 = new rf.ChartComponent ('c1');\n\nc1.addSeries (\"foo\", \"Foo\", [1, 2, -3], {\n    numberPrefix: \"~\",\n    numberSuffix: \"%\",\n    seriesDisplayType: 'column'\n});","signature":"addSeries(id, name, seriesData, opts)"},{"desc":"Set an array of data points which will be used for the pie chart.","method":"setPieValues","param":[{"paramType":"Array","name":"seriesData","desc":"The data array","optional":false},{"paramType":"ChartSeriesProperties","name":"opts","desc":"The series options","optional":false}],"signature":"setPieValues(seriesData, opts)"},{"desc":"updates the series data","method":"updateSeries","param":[{"paramType":"String","name":"id","desc":"The id of the series","optional":false},{"paramType":"Array","name":"newData","desc":"The updated data array","optional":false}],"signature":"updateSeries(id, newData)"},{"desc":"Set the labels of the chart, which are the names on the X-Axis.","method":"setLabels","param":{"paramType":"Array","name":"labelArray","desc":"An array of labels as strings","optional":false},"signature":"setLabels(labelArray)"},{"desc":"Configure the Y-Axis of the chart.","method":"setYAxis","param":[{"paramType":"String","name":"name","desc":"The name of the axis","optional":false},{"paramType":"Object","name":"options","desc":"An option array. See the guide for available options.","optional":false}],"signature":"setYAxis(name, options)"},{"desc":"Add another Y-Axis to the chart.","method":"addYAxis","param":[{"paramType":"String","name":"id","desc":"The unique id of this axis","optional":false},{"paramType":"String","name":"name","desc":"The name of the axis","optional":false},{"paramType":"Object","name":"options","desc":"An option array. See the guide for available options.","optional":false}],"signature":"addYAxis(id, name, options)"},{"desc":"Attach a handler for the event when a chart plot item is clicked.","access":{"name":"public"},"memberOf":{"name":"ChartComponent"},"method":"onItemClick","param":{"paramType":"Function","name":"callback","desc":"The callback function to be called","optional":false},"signature":"onItemClick(callback)"},{"desc":"Clears all the data in the chart. Use this function if you want to update the\nchart with new data and labels.\n\nBe sure to lock the component before","method":"clearChart","signature":"clearChart()"}]},{"desc":"Base Component Class containing functions shared across all components.\n\n**This is an abstract class. You cannot create instances of this.*","class":"Component","signature":"new Component()","access":"public","methods":[{"desc":"Set the dimensions of the component. The dimensions are based on a 12-column grid","method":"setDimensions","param":[{"paramType":"Number","name":"w","desc":"width of the component in units","optional":false},{"paramType":"Number","name":"h","desc":"height of the component in units","optional":false}],"signature":"setDimensions(w, h)"},{"desc":"Set the caption of this component which is the text displayed on top of the component.","method":"setCaption","param":{"paramType":"String","name":"captionString","desc":"caption text to be displayed on the component","optional":false},"signature":"setCaption(captionString)"},{"desc":"Set the value to the key passed for the particular component.","method":"setOption","param":[{"paramType":"String","name":"key","desc":"variable which needs to be assigned","optional":false},{"paramType":"Object","name":"value","desc":"value to be assigned to the key","optional":false}],"signature":"setOption(key, value)"},{"desc":"Temporarily pauses all changes to the component and displays a 'loading' spinner.\nUse 'unlock' to resume drawing the component.\nAll functions that you call on this component will only take affect when 'unlock' is called.","method":"lock","signature":"lock()"},{"desc":"Continue normal behaviour of the component.\nAny changes made during the component is locked is now applied.","method":"unlock","signature":"unlock()"},{"desc":"Add a simple Key Performance Indicator (KPI/Metric) attached to the\nbottom of the component.","param":[{"paramType":"String","name":"id","desc":"A unique ID to identify the component KPI","optional":false},{"paramType":"ComponentKPIProperties","name":"options","desc":"caption text to be displayed on the component","optional":false}],"method":"addComponentKPI","signature":"addComponentKPI(id, options)"},{"desc":"Update the component KPI","param":{"paramType":"String","name":"id","desc":"A unique ID to identify the component KPI. This has to be the same as the one used to add the component kpi","optional":false},"method":"updateComponentKPI","signature":"updateComponentKPI(id)"},{"desc":"Update the component KPI","param":{"paramType":"String","name":"id","desc":"A unique ID to identify the component KPI. This has to be the same as the one used to add the component kpi","optional":false},"method":"removeComponentKPI","signature":"removeComponentKPI(id)"},{"desc":"Check if the component is locked","method":"isLocked","signature":"isLocked()"},{"desc":"Reset the state of the component except the position/location","method":"reset","signature":"reset()"},{"desc":"Set the id for this component","method":"setID","param":{"paramType":"String","name":"_id","desc":"a unique string which represents the component in a dashboard","optional":false},"signature":"setID(_id)"},{"desc":"Get the id for this component","method":"getID","returns":{"returnType":"String","desc":"_id The id which is set"},"signature":"getID()"},{"desc":"Hides a component from the dashboard","method":"hideComponent","signature":"hideComponent()"},{"desc":"Show a hidden component in a modal","method":"showAsModal","signature":"showAsModal()"}]},{"desc":"Creates a form component","class":"FormComponent","augments":"Component","signature":"new FormComponent()","access":"public","methods":[{"desc":"Add a text field represented by a HTML Text input on the form.","method":"addTextField","param":[{"paramType":"String","name":"id","desc":"id for this field, used to retrieve the value","optional":false},{"paramType":"String","name":"label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Object","name":"options","desc":"The options object","optional":false}],"signature":"addTextField(id, label, options)"},{"desc":"Add a select/dropdown field which allows the user to select one\noption from a list of pre-defined options.\nThis is displayed as a HTML Select input on the form.","method":"addSelectField","param":[{"paramType":"String","name":"id","desc":"id for this field, used to retrieve the value","optional":false},{"paramType":"string","name":"label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"list","desc":"An array of strings which are the options in the select items.","optional":false},{"paramType":"Object","name":"options","desc":"The options object","optional":false}],"signature":"addSelectField(id, label, list, options)"},{"desc":"Add a multi-select field which allows the user to select one\noption from a list of pre-defined options. This is displayed as a HTML multi select input on the form.","method":"addMultiSelectField","param":[{"paramType":"String","name":"id","desc":"id for this field, used to retrieve the value","optional":false},{"paramType":"string","name":"label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Array","name":"list","desc":"An array of strings which are the options in the select items.","optional":false},{"paramType":"Object","name":"options","desc":"The options object","optional":false}],"signature":"addMultiSelectField(id, label, list, options)"},{"desc":"Add a select/dropdown field which allows the user to select a single date. This is displayed with a date picker.","method":"addDateField","param":[{"paramType":"String","name":"id","desc":"id for this field, used to retrieve the value","optional":false},{"paramType":"string","name":"label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Object","name":"options","desc":"The options object","optional":false}],"signature":"addDateField(id, label, options)"},{"desc":"Adds a Date Range field to the component. This field can be used to select a date range, a start date and an end date.\nrange, a start date and an end date.","method":"addDateRangeField","param":[{"paramType":"String","name":"id","desc":"id for this field, used to retrieve the value","optional":false},{"paramType":"string","name":"label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Object","name":"options","desc":"The options object","optional":false}],"signature":"addDateRangeField(id, label, options)"},{"desc":"Adds a Numeric Range field to the component. This field can be used to select a numeric range, a start number and an end number.","method":"addNumericRangeField","param":[{"paramType":"String","name":"id","desc":"Unique id for this field","optional":false},{"paramType":"String","name":"label","desc":"The name displayed on the control","optional":false},{"paramType":"Array","name":"values","desc":"The default values for the start and end numbers","optional":false},{"paramType":"Object","name":"options","desc":"The options object","optional":false}],"signature":"addNumericRangeField(id, label, values, options)"},{"desc":"Add a checkbox field displayed as a HTML checkbox in the form.","method":"addCheckboxField","param":[{"paramType":"String","name":"id","desc":"id for this field, used to retrieve the value","optional":false},{"paramType":"String","name":"label","desc":"The label that is displayed in the form element for the user","optional":false},{"paramType":"Boolean","name":"value","desc":"If the checkbox is supposed to be checked by default","optional":false}],"signature":"addCheckboxField(id, label, value)"},{"desc":"Sets a callback for the apply click event","method":"onApplyClick","param":{"paramType":"Function","name":"cb","desc":"The callback which is called when submit is clicked","optional":false},"signature":"onApplyClick(cb)"},{"desc":"Returns all the input values provided in this component","method":"getAllInputValues","signature":"getAllInputValues()"},{"desc":"Returns an input value by id provided in this component","method":"getInputValue","param":{"paramType":"String","name":"id","desc":"The id of a specific field","optional":false},"signature":"getInputValue(id)"}]},{"desc":"Creates a gauge component","class":"GaugeComponent","augments":"KPIComponentCore","signature":"new GaugeComponent()","access":"public","methods":[{"desc":"Sets the maximum and minimum values of the gauge.","method":"setLimits","param":[{"paramType":"Number","name":"min","desc":"Lower bound of the gauge","optional":false},{"paramType":"Number","name":"max","desc":"Upper bound of the gauge","optional":false}],"signature":"setLimits(min, max)"}]},{"desc":"Creates a kpi component","class":"KPIComponent","augments":"KPIComponentCore","signature":"new KPIComponent()","access":"public","methods":[{"desc":"sets the values to be displayed by the spark","method":"setSparkValues","param":[{"paramType":"Array","name":"labels","desc":"Array of labels as strings","optional":false},{"paramType":"Array","name":"values","desc":"The values used by the spark","optional":false}],"signature":"setSparkValues(labels, values)"}]},{"desc":"This is the base class for all the kpi components","class":"KPIComponentCore","augments":"Component","access":"private","signature":"new KPIComponentCore()","methods":[{"desc":"Sets a numeric value to the KPI which is displayed on the dashboard.","method":"setValue","param":[{"paramType":"Number","name":"numberValue","desc":"The value to be displayed","optional":false},{"paramType":"KPIDisplayProperties","name":"opts","desc":"options to configure the display","optional":false}],"signature":"setValue(numberValue, opts)"}]},{"desc":"Creates a KPI Group Component","class":"KPIGroupComponent","augments":"MultiKPIComponent","signature":"new KPIGroupComponent()","access":"public"},{"desc":"Creates a KPI Table Component","class":"KPITableComponent","augments":"MultiKPIComponent","signature":"new KPITableComponent()","access":"public"},{"desc":"MultiKPI Class containing functions shared across KPI Table and KPI Group.\n\n**This is an abstract class. You cannot create instances of this.*","class":"MultiKPIComponent","signature":"new MultiKPIComponent()","access":"public","methods":[{"desc":"Adds an individual KPI","method":"addKPI","param":[{"paramType":"String","name":"id","desc":"A unique id for the KPI","optional":false},{"paramType":"ComponentKPIProperties","name":"options","desc":"Set of options for configuring this KPI","optional":false}],"signature":"addKPI(id, options)"},{"desc":"Updates an existing KPI","method":"updateKPI","param":[{"paramType":"String","name":"id","desc":"The unique id for the individual KPI","optional":false},{"paramType":"ComponentKPIProperties","name":"opts","desc":"Set of options for configuring this KPI","optional":false}],"signature":"updateKPI(id, opts)"},{"desc":"Deletes an existing KPI","method":"deleteKPI","param":{"paramType":"String","name":"id","desc":"The unique id for the individual KPI","optional":false},"signature":"deleteKPI(id)"},{"desc":"Sets a caption color for a KPI","method":"setKPICaptionColor","param":[{"paramType":"String","name":"id","desc":"The unique id for the individual KPI","optional":false},{"paramType":"String","name":"color","desc":"Color for the caption","optional":false}],"signature":"setKPICaptionColor(id, color)"},{"desc":"Sets a value color for a KPI","method":"setKPIValueColor","param":[{"paramType":"String","name":"id","desc":"The unique id for the individual KPI","optional":false},{"paramType":"String","name":"opts","desc":"Color for the value text","optional":false}],"signature":"setKPIValueColor(id, opts)"}]},{"desc":"Creates a component which displays a table","class":"TableComponent","augments":"Component","signature":"new TableComponent()","access":"public","methods":[{"desc":"Add a row of data to the table.\nThis will need to be provided as a key-value object whose keys correspond to individual column keys","method":"addRow","param":{"paramType":"RowObject","name":"rowData","desc":"an key-value object containing the data to be displayed in a row.","optional":false},"signature":"addRow(rowData)"},{"desc":"Adds a column definition to the table","method":"addColumn","param":[{"paramType":"String","name":"id","desc":"A unique id for this column which also corrresponds to the keys of row objects","optional":false},{"paramType":"String","name":"name","desc":"The name of the column which is displayed in the table","optional":false},{"paramType":"TableColumnProperties","name":"options","desc":"Configure how the data is displayed","optional":false}],"signature":"addColumn(id, name, options)"},{"desc":"Sets the number of rows per page in the table","method":"setRowsPerPage","param":{"paramType":"Number","name":"numRows","desc":"the number of rows in a single page on the table","optional":false},"signature":"setRowsPerPage(numRows)"},{"desc":"Adds multiple rows of data to the table at once.\nNote that the each row need to be provided as a key-value object whose keys match the column keys","method":"addMultipleRows","param":{"paramType":"Array","name":"rows","desc":"An array of objects","optional":false},"signature":"addMultipleRows(rows)"},{"desc":"Clears all the rows from the table","method":"clearRows","signature":"clearRows()"}]}]}